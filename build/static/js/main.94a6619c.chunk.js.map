{"version":3,"sources":["utils.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Logout.js","components/Inventory.js","components/Order.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getRestaurantName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","className","onSubmit","type","ref","this","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFish","currentTarget","reset","EditFishForm","updateFish","deleteFish","index","handleChange","updatedFish","target","onChange","onClick","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","appId","base","Rebase","createClass","database","Logout","setUid","logout","a","auth","signOut","Inventory","loadSample","fishes","storeId","useState","uid","owner","setOwner","authHandler","authData","fetch","context","store","post","data","user","useEffect","onAuthStateChanged","Object","keys","map","key","provider","authProvider","signInWithPopup","then","Order","order","deleteFromOrder","orderIds","total","reduce","prevTotal","count","TransitionGroup","component","isAvailable","transitionOptions","classNames","timeout","enter","exit","CSSTransition","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","addToOrder","details","src","process","alt","disabled","App","state","Date","now","setState","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.94a6619c.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, '-')\r\n    .replace(/[^\\w-]+/g, '')\r\n    .replace(/--+/g, '-')\r\n    .replace(/^-+/, '')\r\n    .replace(/-+$/, '');\r\n}\r\n\r\nexport function getRestaurantName() {\r\n  const adjectives = [\r\n    'Delicious',\r\n    'Hungry',\r\n    'Appetizing',\r\n    'Aromatic',\r\n    'Crisp',\r\n    'Cool',\r\n    'Boiled',\r\n    'Classic',\r\n    'Cheesy',\r\n    'Chunked',\r\n    'Hot',\r\n    'Fresh',\r\n    'Grilled',\r\n    'Fried',\r\n    'Juicy',\r\n    'Large',\r\n    'Luscious',\r\n    'Lavish',\r\n    'Steamy',\r\n    'Fruity',\r\n    'Flaky',\r\n    'Flavored',\r\n    'Flavorful',\r\n    'Fluffy',\r\n    'Delectable',\r\n    'Doughy',\r\n    'Candied',\r\n    'Plain',\r\n  ];\r\n\r\n  const nouns = [\r\n    'Burgers',\r\n    'Fish',\r\n    'Shrimp',\r\n    'Pizza',\r\n    'Soup',\r\n    'Salsa',\r\n    'Burritos',\r\n    'Tacos',\r\n    'Sandwiches',\r\n    'Waffles',\r\n    'Pancakes',\r\n    'Pastries',\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { getRestaurantName } from '../utils';\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n\r\n  goToStore = (e) => {\r\n    e.preventDefault();\r\n    const storeName = this.myInput.current.value;\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={(e) => this.goToStore(e)}>\r\n        <h2>Please Enter A Restaurant</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getRestaurantName()}\r\n        />\r\n        <button type=\"submit\">Visit Store</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nStorePicker.propTypes = {\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ tagline }) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className='\"tagline'>\r\n      <span>{tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n\r\n  priceRef = React.createRef();\r\n\r\n  statusRef = React.createRef();\r\n\r\n  descRef = React.createRef();\r\n\r\n  imageRef = React.createRef();\r\n\r\n  createFish = (e) => {\r\n    // stop form from submitting\r\n    e.preventDefault();\r\n\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input\r\n          name=\"name\"\r\n          ref={this.nameRef}\r\n          placeholder=\"Fish Name\"\r\n          type=\"text\"\r\n        />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          placeholder=\"Fish Price\"\r\n          type=\"text\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh</option>\r\n          <option value=\"unavailable\">Sold Out</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Fish Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          placeholder=\"Image\"\r\n          type=\"text\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddFishForm.propTypes = {\r\n  addFish: PropTypes.func,\r\n};\r\n\r\nexport default AddFishForm;\r\n","import { PropTypes } from 'prop-types';\r\n\r\nconst EditFishForm = ({ fish, updateFish, deleteFish, index }) => {\r\n  const handleChange = (e) => {\r\n    // update that fish\r\n    // 1 take copy of current fish\r\n    const updatedFish = { ...fish, [e.target.name]: e.target.value };\r\n    updateFish(index, updatedFish);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fish-edit\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        onChange={handleChange}\r\n        value={fish.name}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"price\"\r\n        onChange={handleChange}\r\n        value={fish.price}\r\n      />\r\n      <select name=\"status\" onChange={handleChange} value={fish.status}>\r\n        <option value=\"available\">Fresh</option>\r\n        <option value=\"unavailable\">Sold Out</option>\r\n      </select>\r\n      <textarea name=\"desc\" onChange={handleChange} value={fish.desc} />\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        value={fish.image}\r\n        name=\"image\"\r\n      />\r\n      <button type=\"button\" onClick={() => deleteFish(index)}>\r\n        Remove fish\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nEditFishForm.propTypes = {\r\n  fish: PropTypes.PropTypes.shape({\r\n    image: PropTypes.string,\r\n    name: PropTypes.string,\r\n    price: PropTypes.number,\r\n    desc: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n  updateFish: PropTypes.func,\r\n  deleteFish: PropTypes.func,\r\n  index: PropTypes.string,\r\n};\r\n\r\nexport default EditFishForm;\r\n","/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/no-unused-prop-types */\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst Login = ({ authenticate }) => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => authenticate('Github')}>\r\n      Log In With GitHub\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => authenticate('Facebook')}>\r\n      Log In With Facebook\r\n    </button>\r\n    <button className=\"twitter\" onClick={() => authenticate('Twitter')}>\r\n      Log In With Twitter\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDdXrlRBkfqSHi4CXi5AVaNuRtVC-QpFac',\r\n  authDomain: 'restaurant-menu-5a4f5.firebaseapp.com',\r\n  databaseURL: 'https://restaurant-menu-5a4f5-default-rtdb.firebaseio.com',\r\n  appId: '1:267132498643:web:0b63d688cd60b6547d1a26',\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a default export\r\nexport default base;\r\n","import firebase from 'firebase/app';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst Logout = ({ setUid }) => {\r\n  const logout = async () => {\r\n    await firebase.auth().signOut();\r\n    setUid(null);\r\n  };\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={logout}>\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogout.propTypes = {\r\n  setUid: PropTypes.func,\r\n};\r\n\r\nexport default Logout;\r\n","/* eslint-disable no-unreachable */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport firebase from 'firebase/app';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\nimport Logout from './Logout';\r\n\r\nconst Inventory = ({\r\n  addFish,\r\n  updateFish,\r\n  deleteFish,\r\n  loadSample,\r\n  fishes,\r\n  storeId,\r\n}) => {\r\n  const [uid, setUid] = useState(null);\r\n  const [owner, setOwner] = useState(null);\r\n  const authHandler = async (authData) => {\r\n    // 1 look up the current store in the firebase database\r\n    const store = await base.fetch(storeId, { context: this });\r\n    // 2 claim store if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3 set the state of the inventory component to reflect the current user\r\n    setUid(authData.user.uid);\r\n    setOwner(store.owner || authData.user.uid);\r\n    // ({\r\n    // if this was a class componenet and not stateless\r\n    //   uid: authData.user.uid,\r\n    //   owner: store.owner || authData.user.uid,\r\n    // })\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        authHandler({ user });\r\n      }\r\n    });\r\n  });\r\n\r\n  const authenticate = (provider) => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp.auth().signInWithPopup(authProvider).then(authHandler);\r\n  };\r\n\r\n  // 1 check if logged in\r\n  if (!uid) {\r\n    return (\r\n      <div>\r\n        <Login authenticate={authenticate} />\r\n        <button onClick={loadSample} type=\"button\">\r\n          Load Sample Menu\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 2 check if they are not owner of current store\r\n  if (uid !== owner) {\r\n    return (\r\n      <div>\r\n        <p>Sorry, you are not the owner of this store</p>\r\n        <Logout setUid={setUid} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 3 they must be the owner, just render the inventory\r\n  return (\r\n    <div className=\"inventory\">\r\n      <h2>Inventory</h2>\r\n      <Logout setUid={setUid} />\r\n      {Object.keys(fishes).map((key) => (\r\n        <EditFishForm\r\n          fish={fishes[key]}\r\n          key={key}\r\n          index={key}\r\n          updateFish={updateFish}\r\n          deleteFish={deleteFish}\r\n        />\r\n      ))}\r\n      <AddFishForm addFish={addFish} />\r\n      <button onClick={loadSample} type=\"button\">\r\n        Load Sample Fishes\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nInventory.propTypes = {\r\n  addFish: PropTypes.func,\r\n  updateFish: PropTypes.func,\r\n  deleteFish: PropTypes.func,\r\n  loadSample: PropTypes.func,\r\n  fishes: PropTypes.object,\r\n  storeId: PropTypes.string,\r\n};\r\n\r\nexport default Inventory;\r\n\r\n// class Inventory extends React.Component {\r\n//   render() {\r\n//     const { addFish, loadSample } = this.props;\r\n//     return (\r\n//       <div className=\"inventory\">\r\n//         <h2>Inventory</h2>\r\n//         <AddFishForm addFish={addFish} />\r\n//         <button onClick={loadSample} type=\"submit\">\r\n//           Load Sample Fishes\r\n//         </button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Inventory;\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { PropTypes } from 'prop-types';\r\nimport { formatPrice } from '../utils';\r\n\r\nconst Order = ({ fishes, order, deleteFromOrder }) => {\r\n  const renderOrder = (key) => {\r\n    const fish = fishes[key];\r\n    const count = order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: 'order',\r\n      key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    };\r\n    // make sure fish is loaded before we continue\r\n    if (!fish) return null;\r\n    if (isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            <span>\r\n              <TransitionGroup component=\"span\" className=\"count\">\r\n                <CSSTransition\r\n                  classNames=\"count\"\r\n                  key={count}\r\n                  timeout={{ enter: 500, exit: 500 }}\r\n                >\r\n                  <span>{count}</span>\r\n                </CSSTransition>\r\n              </TransitionGroup>\r\n              lbs {fish.name}\r\n              {formatPrice(count * fish.price)}\r\n              <button type=\"button\" onClick={() => deleteFromOrder(key)}>\r\n                &times;\r\n              </button>\r\n            </span>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          Sorry, {fish ? fish.name : 'fish'} is no longer available\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  const orderIds = Object.keys(order);\r\n\r\n  const total = orderIds.reduce((prevTotal, key) => {\r\n    const fish = fishes[key];\r\n    const count = order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    if (isAvailable) {\r\n      return prevTotal + count * fish.price;\r\n    }\r\n    return prevTotal;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className=\"order-wrap\">\r\n      <h2>Order</h2>\r\n      <TransitionGroup component=\"ul\" className=\"order\">\r\n        {orderIds.map(renderOrder)}\r\n      </TransitionGroup>\r\n      <div className=\"total\">\r\n        Total:\r\n        <strong>{formatPrice(total)}</strong>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nOrder.propTypes = {\r\n  fishes: PropTypes.object,\r\n  order: PropTypes.object,\r\n  deleteFromOrder: PropTypes.func,\r\n};\r\n\r\nexport default Order;\r\n\r\n// class Order extends React.Component {\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"order\">\r\n//         <p>Order</p>\r\n\r\n//         <button onClick={this.handleClick}>Click me</button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Order;\r\n","const fishes = {\n  fish1: {\n    name: 'Pacific Halibut',\n    image:\n      'https://media-cdn.greatbritishchefs.com/media/5w3nxt5k/img24855.jpg',\n    desc: 'Everyone’s favorite white fish. We will cut it to the size you need and ship it.',\n    price: 1724,\n    status: 'available',\n  },\n\n  fish2: {\n    name: 'Lobster',\n    image: '/images/lobster.jpg',\n    desc: 'These tender, mouth-watering beauties are a fantastic hit at any dinner party.',\n    price: 3200,\n    status: 'available',\n  },\n\n  fish3: {\n    name: 'Sea Scallops',\n    image: '/images/scallops.jpg',\n    desc: 'Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound',\n    price: 1684,\n    status: 'unavailable',\n  },\n\n  fish4: {\n    name: 'Mahi Mahi',\n    image: '/images/mahi.jpg',\n    desc: 'Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. ',\n    price: 1129,\n    status: 'available',\n  },\n\n  fish5: {\n    name: 'King Crab',\n    image: '/images/crab.jpg',\n    desc: 'Crack these open and enjoy them plain or with one of our cocktail sauces',\n    price: 4234,\n    status: 'available',\n  },\n\n  fish6: {\n    name: 'Atlantic Salmon',\n    image: '/images/salmon.jpg',\n    desc: 'This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!',\n    price: 1453,\n    status: 'available',\n  },\n\n  fish7: {\n    name: 'Oysters',\n    image: '/images/oysters.jpg',\n    desc: 'A soft plump oyster with a sweet salty flavor and a clean finish.',\n    price: 2543,\n    status: 'available',\n  },\n\n  fish8: {\n    name: 'Mussels',\n    image: '/images/mussels.jpg',\n    desc: 'The best mussels from the Pacific Northwest with a full-flavored and complex taste.',\n    price: 425,\n    status: 'available',\n  },\n\n  fish9: {\n    name: 'Jumbo Prawns',\n    image: '/images/prawns.jpg',\n    desc: 'With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.',\n    price: 2250,\n    status: 'available',\n  },\n};\n\nexport default fishes;\n","import PropTypes from 'prop-types';\r\nimport { formatPrice } from '../utils';\r\n\r\nconst Fish = ({\r\n  addToOrder,\r\n  index,\r\n  details: { name, image, price, desc, status },\r\n}) => {\r\n  const isAvailable = status === 'available';\r\n\r\n  // const handleClick = () => {\r\n  //   addToOrder(index);\r\n  // };\r\n\r\n  return (\r\n    <li className=\"menu-fish\">\r\n      <img src={process.env.PUBLIC_URL + image} alt={name} />\r\n      <h3 className=\"fish-name\">\r\n        {name}\r\n        <span className=\"price\">{formatPrice(price)}</span>\r\n      </h3>\r\n      <p>{desc}</p>\r\n      <button\r\n        disabled={!isAvailable}\r\n        type=\"button\"\r\n        onClick={() => addToOrder(index)}\r\n      >\r\n        {isAvailable ? 'Add To Cart' : 'Sold Out!'}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nFish.propTypes = {\r\n  addToOrder: PropTypes.func,\r\n  index: PropTypes.string,\r\n  details: PropTypes.shape({\r\n    image: PropTypes.string,\r\n    name: PropTypes.string,\r\n    price: PropTypes.number,\r\n    desc: PropTypes.string,\r\n    status: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Fish;\r\n","/* eslint-disable react/no-access-state-in-setstate */\r\n/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/state-in-constructor */\r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport Header from './Header';\r\nimport Inventory from './Inventory';\r\nimport Order from './Order';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate local storage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes',\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { params } = this.props.match;\r\n    localStorage.setItem(params.storeId, JSON.stringify(this.state.order));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = (fish) => {\r\n    // take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // add new fish to fishes\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // set new fishes object to state\r\n    this.setState({\r\n      fishes,\r\n    });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1 take a copy of current fish\r\n    const fishes = { ...this.state.fishes };\r\n    // 2 update state\r\n    fishes[key] = updatedFish;\r\n    // 3 set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = (key) => {\r\n    // 1 copy state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2 delete fish\r\n    fishes[key] = null;\r\n    // 3 set to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  addToOrder = (key) => {\r\n    // 1 take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2 either add to order or update number in order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3 call setstate to update state object\r\n    this.setState({\r\n      order,\r\n    });\r\n  };\r\n\r\n  deleteFromOrder = (key) => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  };\r\n\r\n  loadSample = () => {\r\n    this.setState({\r\n      fishes: sampleFishes,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map((key) => (\r\n              <Fish\r\n                key={key}\r\n                // need to pass key again for access for addToOrder\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          deleteFromOrder={this.deleteFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSample={this.loadSample}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  match: PropTypes.object,\r\n};\r\n\r\nexport default App;\r\n","const NotFound = () => (\r\n  <div>\r\n    <h2>Store Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}